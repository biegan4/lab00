#include <SFML/Window.hpp>
#include <SFML/Graphics.hpp>
#include <iostream>
#include "CustomRectangle.h"
#include <random>
#include <vector>

int main()
{
    srand(time(0));
    sf::RenderWindow window(sf::VideoMode(800, 600), "My window");
    window.setFramerateLimit(60);

    float WIDTH = window.getSize().x;
    float HEIGHT = window.getSize().y;

    std::vector<CustomRectangleShape> rectangles;

    // Create some rectangles with random positions
    for (int i = 0; i < 10; i++)
    {
        sf::Vector2f size(120.0, 60.0);
        sf::Vector2f position(std::rand() % (window.getSize().x - 120), std::rand() % (window.getSize().y - 60));
        rectangles.emplace_back(CustomRectangleShape(size, position));
    }

    // Set up the rectangles
    for (auto& rec : rectangles)
    {
        rec.setFillColor(sf::Color(0, 255, 0));  // Green color
        rec.setBounds(0, 0, window.getSize().x, window.getSize().y);
        rec.setSpeed(100, 200, 10);  // Set random speed or specific speed
    }

    CustomRectangleShape* currentlyClicked = nullptr;
    sf::Clock clock;
    sf::Event event;

    // Main game loop
    while (window.isOpen()) {
        sf::Time elapsed = clock.restart();
        window.clear(sf::Color::Black);

        // Event handling loop
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed) {
                window.close();
            }
            if (event.type==sf::Event::KeyPressed){
            if (currentlyClicked) {
                currentlyClicked->moveInDirection(elapsed, event.key.code);
                std::cout << currentlyClicked->getPosition().x << " " << currentlyClicked->getPosition().y << "\n";
            }
            }


            // Handle mouse button press
            if (event.type == sf::Event::MouseButtonPressed) {
                if (event.mouseButton.button == sf::Mouse::Left) {
                    sf::Vector2i mousePosition(event.mouseButton.x, event.mouseButton.y);

                    // Check each rectangle for click
                    for (auto& rec : rectangles) {
                        if (rec.isClicked(mousePosition)) {
                            currentlyClicked = &rec;  // Set currently clicked rectangle
                            rec.setFillColor(sf::Color(255, 0, 255));  // Magenta color on click
                        } else {
                            rec.setFillColor(sf::Color(0, 255, 0));
                        }
                    }
                }
            }
        }

        // If an object is clicked, move it in some direction

        // Draw all rectangles
        for (auto& rec : rectangles) {
            window.draw(rec);
        }

        window.display();
    }

    return 0;
}
