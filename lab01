#include <iostream>
#include <vector>
#include <numeric> 
#include <algorithm>
#include <array>
#include <cassert>
#include <complex>
#include <iostream>
#include <iterator>

using namespace std;
class Student
{
    std::string name;
    std::string surname;
    std::vector<float> grades;
    int index_;
    float final_grade;
public:
    Student(string n, string s = "place_holder")
    {
        name = n;
        surname = s;
    }
    Student(string n)
    {
        name = n;
    }
    Student(int n)
    {

    }
    string get_name()
    {
        return name;
    }
    // ~Student()
    // {
    //     cout << "object byby" << endl;
    // }
    void calculate_grade(){
    float sum = std::accumulate(grades.begin(), grades.end(), 0.0f);
    final_grade = sum / grades.size();
}

    void set_index(int index){
        index_=index;
    }
    int index(){
        return index_;
    }


void print()
{
    cout << name <<" "<< surname <<"" ;
    for (auto g : grades)
    {
        cout << g << ",";
    }
    cout << endl;
};
bool add_grade(float grade) {
    if (grade >= 2.0 && grade <= 5.0) {
        grades.push_back(grade);
        return true;
    }
    return false;
};
void set_name(string n)
{
    name = n;
}
float get_final_grade() {
    return final_grade;
}
void display() {
    cout << "Student: " << name << " " << surname << " (Album: " << index_ << ")\n";
    cout << "Grades: ";
}
};





class Complex {
    float re;
    float im;

public:
    Complex(float a = 0, float b = 0) {
        re = a;
        im = b;
    }
    void setRe(float a) {
        re = a;
    }
    float getRe() {
        return re;
    }
    void setIm(float b) {
        im = b;
    }
    float getIm() {
        return im;
    }
    void print() {
        if (im < 0) {
            std::cout << re << im << "i";
        }
        else {
            std::cout << re << "+" << im << "i";
        }
    }
    Complex add(Complex complex) {
        re = re + complex.re;
        im = im + complex.im;
        return Complex(re, im);
    }

};

void homeWorkPart1() {
    Student student("Adam", "Jakubiak");
    student.setAlbumNumber("123456");
    student.addGrade(2.0);
    student.addGrade(3.0);
    student.addGrade(3.5);
    student.calculateGrade();
    student.print();
    student.semesterPassed();
}
void homeWorkPart2() {
    Complex a(1.0, -2.0); // creates 1-2i
    Complex b(3.14); // creates 3.14

    b.setIm(-5);

    Complex c = a.add(b);

    c.print(); // prints 4.14-7i
}

int main()
{
    int choice;
    std::cout << "Which task do you want to run (1-Student, 2-Complex): ";
    std::cin >> choice;
    if (choice == 1) {
        homeWorkPart1();
    }
    else if (choice == 2) {
        homeWorkPart2();
    }
    else {
        std::cout << "Wrong task number";
    }
    return 0;
}
